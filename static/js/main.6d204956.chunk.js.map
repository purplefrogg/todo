{"version":3,"sources":["components/header/Header.module.scss","pages/todo/ToDo.module.scss","App.module.scss","redux/app-Reducer.js","components/clock/Clock.jsx","components/header/Header.jsx","utils/validators.js","pages/todo/ToDoAdd.jsx","redux/todo-Reducer.js","pages/todo/Task.jsx","pages/todo/ToDo.jsx","api/CoinGeckoAPI/base.js","redux/crypto-Reducer.js","redux/store.js","pages/PasswordGenerator/PassordGenerator.jsx","pages/crypto/CryptoPage.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","CHANGE_THEME","initialState","theme","changeTheme","payload","type","appReducer","state","action","Clock","props","useState","Date","date","setDate","useEffect","newDate","setInterval","toLocaleTimeString","Header","useSelector","app","dispatch","useDispatch","className","style","clock","item","menu","aria-label","to","onClick","btn","required","value","ToDoAdd","initialValues","text","onSubmit","values","resetForm","addTask","errors","input","id","name","placeholder","validate","ADD_TASK","DELETE_TASK","DELETE_ALL_TASKS","EDIT_TASK","COMPLETE_TASK","tasks","completed","todoReducer","length","task","filter","map","el","Task","deleteTask","editTask","completeTask","editMode","setEditMode","taskText","setTaskText","onChange","e","currentTarget","checked","defaultChecked","autoFocus","onBlur","connect","deleteAllTasks","todo","setFilter","changeFilterAll","filteredTasks","buttons","Tasks","instance","axios","create","baseURL","cryptoApi","get","then","res","data","GET_PRICE","cryptocurrencies","setPrice","getCoinMarkets","a","cryptoReducer","rootReducer","combineReducers","crypto","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","PasswordGenerator","generatedPass","setGeneratedPass","PasswordLength","setPasswordLength","min","max","defaultValue","str","i","push","Math","round","random","join","Cryptocurrency","coin","symbol","current_price","App","CryptoPage","dark","light","content","path","component","Todo","ProvidedApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d204956.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__214zg\",\"clock\":\"Header_clock__3cyf-\",\"btn\":\"Header_btn__3Wkv8\",\"menu\":\"Header_menu__1bgN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"ToDo_todo__ENjkJ\",\"buttons\":\"ToDo_buttons__2HGa2\",\"Tasks\":\"ToDo_Tasks__1LxRJ\",\"input\":\"ToDo_input__1traq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"App_dark__22_2O\",\"light\":\"App_light__2ac_u\",\"app\":\"App_app__2ziFi\"};","const CHANGE_THEME = 'app/CHANGE_THEME'\n\nconst initialState = {\n   theme: 'light'\n}\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_THEME:\n            return {...state, theme: action.payload}\n        default:\n            return state\n    }\n}\nexport const changeTheme = (payload) => ({ type: CHANGE_THEME, payload })\nexport default appReducer","import { useEffect, useState } from 'react'\n\n\nexport let Clock = (props) => {\n    let [date, setDate] = useState(new Date())\n    useEffect(() => {\n        let newDate = new Date()\n        setInterval(() => {\n            newDate = new Date()\n            setDate(newDate)\n        }, 1000)\n    }, [])\n    return (<div {...props}>\n        {date.toLocaleTimeString()}\n    </ div>)\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { changeTheme } from '../../redux/app-Reducer'\nimport { Clock } from '../clock/Clock'\nimport style from './Header.module.scss'\nimport { NavLink } from 'react-router-dom'\n\n\nexport const Header = () => {\n    const theme = useSelector((state) => state.app.theme)\n    const dispatch = useDispatch()\n    const onChangeTheme = () => {\n        theme === 'dark' ? dispatch(changeTheme('light')) : dispatch(changeTheme('dark'))\n    }\n    return (<nav className={style.Header}>\n        <Clock className={style.clock + ' ' + style.item} />\n        <div className={style.menu + ' ' + style.item}>\n            <ul>\n                \n                <li>menu\n                    <ul className=\"dropdown\" aria-label=\"submenu\">\n                        <li><NavLink to=\"/PasswordGenerator\">Password Generator</NavLink></li>\n                        <li><NavLink to=\"/todo\">todo</NavLink></li>\n                         <li><NavLink to=\"/Cryptocurrency\">crypto</NavLink></li>\n                    </ul>\n                </li>\n            </ul>\n        </div>\n        <button onClick={onChangeTheme} className={style.item + ' ' + style.btn}>\n            {theme === 'light' ? '🌞' : '🌛'}</button>\n    </nav>)\n}\n","export const required = (value) => {\n    if (value) return undefined\n    else return 'required'\n}","import { Field, Form, Formik } from 'formik'\nimport { required } from '../../utils/validators';\nimport style from './ToDo.module.scss'\n\n\n\nexport let ToDoAdd = (props) => {\n    return (<div>\n        <Formik\n            initialValues={{\n                text: '',\n            }}\n            onSubmit={(values, { resetForm, initialValues }) => {\n                props.addTask(values)\n                resetForm(initialValues)\n            }}\n        >\n            {({ errors }) => (\n                <Form className={style.input}>\n                    <Field id=\"text\" name=\"text\" placeholder=\"Type to add todo\" validate={required} />\n                    <button type=\"submit\">Add</button>\n                </Form>\n            )}\n        </Formik>\n    </div>)\n}\n\n","const ADD_TASK = \"todo/ADD_TODO\"\nconst DELETE_TASK = \"todo/DELETE_TASK\"\nconst DELETE_ALL_TASKS = \"todo/DELETE_ALL_TASK\"\nconst EDIT_TASK = \"todo/EDIT_TASK\"\nconst COMPLETE_TASK = \"todo/COMPLETE_TASK\"\n\nconst initialState = {\n    tasks: [{ id: 1, text: 'hello', completed: false }],\n   \n}\nconst todoReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TASK:\n            return {\n                ...state, tasks: [...state.tasks, {\n                    id:\n                        state.tasks.length ? state.tasks[state.tasks.length - 1].id + 1 : 1, ...action.task, completed: false\n                }]\n            }\n        case DELETE_TASK:\n            return {\n                ...state, tasks: [...state.tasks.filter(task => task.id !== action.id)]\n            }\n        case DELETE_ALL_TASKS:\n            return {\n                ...state, tasks: []\n            }\n        case EDIT_TASK:\n            return {\n                ...state, tasks: [...state.tasks.map(el => {\n                    if (el.id === action.id) return { id: el.id, text: action.text }\n                    return el\n                })]\n            }\n        case COMPLETE_TASK:\n            return {\n                ...state, tasks: [...state.tasks.map(el => {\n                    if (el.id === action.id) return { id: el.id, text: el.text, completed: action.completed }\n                    return el\n                })]\n            }\n        default:\n            return state\n    }\n}\nexport const addTask = (task) => ({ type: ADD_TASK, task })\nexport const deleteTask = (id) => ({ type: DELETE_TASK, id })\nexport const deleteAllTasks = () => ({ type: DELETE_ALL_TASKS })\nexport const editTask = (text, id) => ({ type: EDIT_TASK, text, id })\nexport const completeTask = (completed, id) => ({ type: COMPLETE_TASK, completed, id })\n\nexport default todoReducer","import { useState } from 'react';\n\nexport const Task = ({ task, deleteTask, editTask, completeTask }) => {\n    let  {text, id, completed} = task\n    let [editMode, setEditMode] = useState(false)\n    let [taskText, setTaskText] = useState(text)\n    const onDelete = () => {\n        deleteTask(id)\n    }\n    const onComplete = (e) => {\n        \n        completeTask(e.currentTarget.checked, id)\n        }\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        !taskText ? deleteTask(id) : editTask(taskText, id)\n        setEditMode(false)\n    }\n    const onTextChange = e => {\n        setTaskText(e.currentTarget.value)\n    }\n    return (<div>\n        <input type='checkbox' onChange={onComplete} defaultChecked={completed} />\n        {editMode &&\n            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onTextChange}\n                value={taskText}></input>}\n        {!editMode && <>{id + '. ' + text}</>}\n        <button onClick={activateEditMode}>edit</button>\n        <button onClick={onDelete}>del</button>\n    </div>)\n}\n","import { connect, useSelector } from 'react-redux'\nimport style from './ToDo.module.scss'\nimport { ToDoAdd } from './ToDoAdd'\nimport { addTask, deleteTask, deleteAllTasks, editTask, completeTask } from '../../redux/todo-Reducer';\nimport { Task } from './Task';\nimport { useState } from 'react';\n\n\nconst ToDo = ({ ...props }) => {\n    const tasks = useSelector((state) => state.todo.tasks)\n    const [filter, setFilter] = useState('All')\n    const changeFilterAll = (e) => {\n        setFilter(e.currentTarget.value)\n    }\n    const onDeleteAllTasks = () => {\n        props.deleteAllTasks()\n    }\n    let filteredTasks = filter === 'Completed' ? tasks.filter(task => task.completed === true) :\n        filter === 'Incomplete' ? tasks.filter(task => task.completed === false) : tasks\n    return (<div className={style.todo}>\n        <ToDoAdd addTask={props.addTask} />\n        <div className={style.buttons}>\n            <span>all\n            <input type=\"radio\" name=\"filter\" defaultChecked='true' id=\"1\" value='All'  onClick={changeFilterAll} /></span>\n            <span>incomplete\n            <input type=\"radio\" name=\"filter\" id=\"2\" value='Incomplete' onClick={changeFilterAll}/></span> \n            <span>completed\n            <input type=\"radio\" name=\"filter\" id=\"3\" value='Completed' onClick={changeFilterAll}/>\n           </span>\n            \n        </div>\n        <div className={style.Tasks}>\n            {filteredTasks.map(task => <Task deleteTask={props.deleteTask} editTask={props.editTask}\n                completeTask={props.completeTask} key={task.id} task={task} />)}\n        </div>\n        <div>\n            <button>left</button>\n            <button>right</button>\n        </div>\n\n        <button onClick={onDeleteAllTasks}>delete all</button>\n    </div>)\n}\n\n\n\nexport default connect(null,\n    {\n        addTask, deleteTask, deleteAllTasks,\n        editTask, completeTask,\n    })(ToDo)\n","import axios from \"axios\"\n\nexport const instance = axios.create({\n    baseURL: 'https://api.coingecko.com/api/v3',\n})\n\nexport const cryptoApi = ({\n    price() {return instance.get(`/simple/price?ids=bitcoin&vs_currencies=usd`).then(res => res.data)},\n    coinMarkets() {\n        return instance.get(`/coins/markets?vs_currency=usd`).then(res => res.data)\n    }\n})","import { cryptoApi } from \"../api/CoinGeckoAPI/base\"\n\nconst GET_PRICE = 'crypto/GET_PRICE'\n\nconst initialState = {\n    cryptocurrencies : [\n    //     {\n    //     id: '',Name: '', current_price: 0\n    // }\n]\n}\nconst cryptoReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PRICE:\n            return {...state, cryptocurrencies: action.payload}\n        default:\n            return state\n    }\n}\nexport const setPrice = (payload) => ({ type: GET_PRICE, payload })\n\n\nexport const getPrice = () => async (dispatch) => {\n    let data = await cryptoApi.price()\n    dispatch(setPrice(data.bitcoin.usd))\n}\nexport const getCoinMarkets = () => async (dispatch) => {\n    let data = await cryptoApi.coinMarkets()\n    dispatch(setPrice(data))\n}\nexport default cryptoReducer","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport appReducer from \"./app-Reducer\";\nimport cryptoReducer from \"./crypto-Reducer\";\nimport todoReducer from \"./todo-Reducer\";\nimport thunkMiddleware from 'redux-thunk'; \n\nconst rootReducer = combineReducers({\n    todo: todoReducer,\n    app: appReducer,\n    crypto: cryptoReducer\n})\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\nwindow.store = store\nexport default store\n","import { useState } from \"react\"\n\n\nconst PasswordGenerator = () => {\n    const [generatedPass, setGeneratedPass] = useState('')\n    const [PasswordLength, setPasswordLength] = useState(5)\n    const generatingPassword = () => {\n        const str = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n        let res = []\n        for(let i = 0; i < PasswordLength; i++){\n            res.push(str[Math.round(Math.random()*100 % str.length)])\n        }\n        setGeneratedPass(res.join(''))\n    }\n    const changingPassLength = (e) =>{\n        setPasswordLength(e.currentTarget.value)\n    }\n    return <div>\n        <input type=\"range\" min='5' max='20' defaultValue={PasswordLength} onChange={changingPassLength} />\n        {generatedPass}\n        <br></br>\n        <button onClick={generatingPassword}>generate</button>\n    </div>\n}\n\nexport default PasswordGenerator","import { useEffect } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { getCoinMarkets } from \"../../redux/crypto-Reducer\"\n\nconst Cryptocurrency = () => {\n    const cryptocurrencies = useSelector((state) => state.crypto.cryptocurrencies)\n  \n    return <div>\n        {cryptocurrencies.map((coin) => {return <div>{`${coin.id} ${coin.symbol}/usdt ${coin.current_price}`}  </div>})}\n    </div>\n} \nexport const CryptoPage = (dispatch) =>{\n    useEffect( () => {\n        dispatch(getCoinMarkets())\n        setInterval(() => {\n            dispatch(getCoinMarkets())\n        }, 60000)\n    }, [])\n}\nexport default Cryptocurrency","import style from './App.module.scss';\nimport { Header } from './components/header/Header';\nimport Todo from './pages/todo/ToDo'\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport store from './redux/store';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PasswordGenerator from './pages/PasswordGenerator/PassordGenerator';\nimport Cryptocurrency, { CryptoPage } from './pages/crypto/CryptoPage';\n\nconst App = () => {\n  const dispatch = useDispatch()\n  CryptoPage(dispatch)\n  const theme = useSelector((state) => state.app.theme)\n  return (\n    <div className={`${style.app} ${theme === 'dark' ? style.dark : style.light}`}>\n      <Header />\n      <div className={style.content}>\n        <Switch>\n          <Route path=\"/todo\" component={Todo}></Route>\n          <Route path=\"/Cryptocurrency\" component={Cryptocurrency}></Route>\n          <Route path=\"/PasswordGenerator\" component={PasswordGenerator}></Route>\n          <Route path=\"/\"><div>page not found!</div></Route>\n        </Switch>\n      </div>\n\n    </div>\n  );\n}\n\nconst ProvidedApp = () => {\n  return (\n    <Router>\n      <Provider store={store}>\n        \n        <App />\n\n      </ Provider>\n    </Router>\n  );\n}\n\nexport default ProvidedApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ProvidedApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ProvidedApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}