{"version":3,"sources":["components/clock/Clock.jsx","components/header/Header.jsx","utils/validators.js","pages/todo/ToDoAdd.jsx","redux/todo-Reducer.js","pages/todo/Task.jsx","pages/todo/ToDo.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Clock","useState","Date","date","setDate","useEffect","newDate","setInterval","toLocaleTimeString","Header","className","required","value","ToDoAdd","props","initialValues","text","onSubmit","values","resetForm","addTask","errors","id","name","placeholder","validate","type","ADD_TASK","DELETE_TASK","DELETE_ALL_TASKS","EDIT_TASK","COMPLETE_TASK","CHANGE_FILTER","initialState","tasks","completed","todoReducer","state","action","length","task","filter","map","el","Task","deleteTask","editTask","completeTask","editMode","setEditMode","taskText","setTaskText","isCompleted","setIsCompleted","onClick","defaultChecked","autoFocus","onBlur","onChange","e","currentTarget","connect","todo","deleteAllTasks","changeFilter","setFilter","changeFilterAll","console","log","filteredTasks","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de51f757.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\n\n\nexport let Clock = () => {\n    let [date, setDate] = useState(new Date())\n    useEffect(() => {\n        let newDate = new Date()\n        setInterval(() => {\n            newDate = new Date()\n            setDate(newDate)\n        }, 1000)\n    }, [])\n    return (<div>\n        {date.toLocaleTimeString()}\n    </div>)\n}\n","\nimport { Clock } from '../clock/Clock'\n\n\nexport let Header = () => {\n    \n    return (<div className=\"Header\">\n        <Clock />\n    </div>)\n}\n","export const required = (value) => {\n    if (value) return undefined\n    else return 'required'\n}","import { Field, Form, Formik } from 'formik'\nimport { required } from '../../utils/validators';\n\nexport let ToDoAdd = (props) => {\n    return (<div>\n        <Formik\n            initialValues={{\n                text: '',\n            }}\n            onSubmit={(values, { resetForm, initialValues }) => {\n                props.addTask(values)\n                resetForm(initialValues)\n            }}\n        >\n            {({ errors }) => (\n                <Form>\n                    <Field id=\"text\" name=\"text\" placeholder=\"Type to add todo\" validate={required} />\n                    <button type=\"submit\">Add</button>\n                </Form>\n            )}\n        </Formik>\n    </div>)\n}\n\n","const ADD_TASK = \"todo/ADD_TODO\"\nconst DELETE_TASK = \"todo/DELETE_TASK\"\nconst DELETE_ALL_TASKS = \"todo/DELETE_ALL_TASK\"\nconst EDIT_TASK = \"todo/EDIT_TASK\"\nconst COMPLETE_TASK = \"todo/COMPLETE_TASK\"\nconst CHANGE_FILTER = \"todo/CHANGE_FILTER\"\n\n\nconst initialState = {\n    tasks: [{ id: 0, text: 'hello', completed: false }],\n   \n}\nconst todoReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TASK:\n            return {\n                ...state, tasks: [...state.tasks, {\n                    id:\n                        state.tasks.length ? state.tasks[state.tasks.length - 1].id + 1 : 0, ...action.task, completed: false\n                }]\n            }\n        case DELETE_TASK:\n            return {\n                ...state, tasks: [...state.tasks.filter(task => task.id !== action.id)]\n            }\n        case DELETE_ALL_TASKS:\n            return {\n                ...state, tasks: []\n            }\n        case EDIT_TASK:\n            return {\n                ...state, tasks: [...state.tasks.map(el => {\n                    if (el.id === action.id) return { id: el.id, text: action.text }\n                    return el\n                })]\n            }\n        case COMPLETE_TASK:\n            return {\n                ...state, tasks: [...state.tasks.map(el => {\n                    if (el.id === action.id) return { id: el.id, text: el.text, completed: action.completed }\n                    return el\n                })]\n            }\n        case CHANGE_FILTER:\n            return {\n                ...state, filter: action.filter\n            }\n        default:\n            return state\n    }\n}\nexport const addTask = (task) => ({ type: ADD_TASK, task })\nexport const deleteTask = (id) => ({ type: DELETE_TASK, id })\nexport const deleteAllTasks = () => ({ type: DELETE_ALL_TASKS })\nexport const editTask = (text, id) => ({ type: EDIT_TASK, text, id })\nexport const completeTask = (completed, id) => ({ type: COMPLETE_TASK, completed, id })\nexport const changeFilter = (filter) => ({ type: CHANGE_FILTER, filter })\n\nexport default todoReducer","import { useEffect, useState } from 'react';\n\nexport const Task = ({ task, deleteTask, editTask, completeTask }) => {\n    let  {text, id, completed} = task\n    let [editMode, setEditMode] = useState(false)\n    let [taskText, setTaskText] = useState(text)\n    let [isCompleted, setIsCompleted] = useState(completed)\n  \n    const onDelete = () => {\n        deleteTask(id)\n    }\n    const onComplete = () => {\n        setIsCompleted(!isCompleted)\n        }\n    useEffect(() => {\n        completeTask(isCompleted, id)\n    }, [isCompleted])\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        !taskText ? deleteTask(id) : editTask(taskText, id)\n        setEditMode(false)\n    }\n    const onTextChange = e => {\n        setTaskText(e.currentTarget.value)\n    }\n    return (<div>\n        <input type='checkbox' onClick={onComplete} defaultChecked={isCompleted} />\n        {editMode &&\n            <input autoFocus={true} onBlur={deactivateEditMode} onChange={onTextChange}\n                value={taskText}></input>}\n        {!editMode && <span>{id + '. ' + text}</span>}\n        <button onClick={activateEditMode}>edit</button>\n        <button onClick={onDelete}>del</button>\n    </div>)\n}\n","import { connect } from 'react-redux'\n\nimport { ToDoAdd } from './ToDoAdd'\nimport { addTask, deleteTask, deleteAllTasks, editTask, completeTask, changeFilter} from '../../redux/todo-Reducer';\nimport { Task } from './Task';\nimport { useState } from 'react';\n\n\nconst ToDo = ({tasks, ...props}) => {\n    const [filter, setFilter] = useState('All')\n    const changeFilterAll = (e) =>{\n        setFilter(e.currentTarget.value)\n    }\n    const onDeleteAllTasks = () => {\n        props.deleteAllTasks()\n    }\n    console.log('asdas')\n    let filteredTasks = filter === 'Completed' ? tasks.filter(task => task.completed === true) :\n    filter === 'Incomplete' ? tasks.filter(task => task.completed === false) : tasks\n    return (<div>\n        <ToDoAdd addTask={props.addTask} />\n        <button value='All' onClick={changeFilterAll}>all</button>\n        <button value='Incomplete' onClick={changeFilterAll}>incomplete</button>\n        <button value='Completed' onClick={changeFilterAll}>completed</button>\n        \n        {filteredTasks.map(task => <Task deleteTask={props.deleteTask} editTask={props.editTask} \n        completeTask={props.completeTask} key={task.id} task={task}/>)}\n        <button onClick={onDeleteAllTasks}>delete all</button>\n        \n    </div>)\n}\nlet mapStateToProps = state => {\n    return {\n        tasks: state.todo.tasks,\n        filter: state.todo.filter\n    }\n}\n\n\nexport default connect(mapStateToProps,\n    { addTask, deleteTask, deleteAllTasks,\n    editTask, completeTask, changeFilter})(ToDo)\n","import './App.css';\nimport { Header } from './components/header/Header';\nimport Todo from './pages/todo/ToDo'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Todo />\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers } from \"redux\";\nimport todoReducer from \"./todo-Reducer\";\n\n\nconst rootReducer = combineReducers({\n    todo: todoReducer\n})\nconst store = createStore(rootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\nwindow.store = store\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}